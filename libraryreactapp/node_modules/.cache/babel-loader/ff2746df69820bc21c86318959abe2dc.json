{"ast":null,"code":"var _jsxFileName = \"D:\\\\EMTLibrary\\\\libraryreactapp\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      this.loadCountries();\n      this.loadAuthors();\n      this.loadCategories();\n      this.loadBooks();\n    };\n\n    this.loadCategories = () => {\n      LibraryService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      LibraryService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      LibraryService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      LibraryService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.addBook = (name, category, authorId, availableCopies) => {\n      const newbook = {\n        name: name,\n        category: category,\n        authorId: authorId,\n        availableCopies: availableCopies\n      };\n      LibraryService.addBook(newbook).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.deleteBook = id => {\n      LibraryService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.editBook = (id, name, category, authorId, availableCopies) => {\n      LibraryService.editBook(id, name, category, authorId, availableCopies).then(() => this.loadBooks());\n    };\n\n    this.getBook = id => {\n      LibraryService.getBook(id).then(data => this.setState({\n        BookToEdit: data.data\n      }));\n    };\n\n    this.markAsTaken = id => {\n      LibraryService.markAsTaken(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      BookToEdit: {},\n      countries: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onDelete: this.deleteBook,\n              onEdit: this.getBook,\n              onMarkAsTaken: this.markAsTaken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(BookAdd, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(BookEdit, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onEditBook: this.editBook,\n              book: this.state.BookToEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/EMTLibrary/libraryreactapp/src/components/App/App.js"],"names":["React","Component","BrowserRouter","Router","Routes","Route","LibraryService","Books","BookAdd","BookEdit","App","constructor","props","fetchData","loadCountries","loadAuthors","loadCategories","loadBooks","fetchCategories","then","data","setState","categories","fetchBooks","books","fetchAuthors","authors","fetchCountries","countries","addBook","name","category","authorId","availableCopies","newbook","deleteBook","id","editBook","getBook","BookToEdit","markAsTaken","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport {Component} from \"react\";\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      BookToEdit: {},\n      countries: []\n    }\n  }\n\n  render() {\n    return (\n        <Router>\n            <main>\n          <Routes>\n            <Route path={\"/books\"} exact element={\n              <Books books={this.state.books}\n                     onDelete={this.deleteBook}\n                     onEdit={this.getBook}\n                     onMarkAsTaken={this.markAsTaken}/>\n            }/>\n            <Route path={\"/books/add\"} exact element={\n              <BookAdd categories={this.state.categories}\n                       authors={this.state.authors}\n                       onAddBook={this.addBook}/>}/>\n\n            <Route path={\"/books/edit/:id\"} exact element={\n              <BookEdit categories={this.state.categories}\n                        authors={this.state.authors}\n                        onEditBook={this.editBook}\n                        book={this.state.BookToEdit}/>}/>\n          </Routes>\n        </main>\n        </Router>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n    fetchData = () => {\n        this.loadCountries();\n        this.loadAuthors();\n        this.loadCategories();\n        this.loadBooks();\n    }\n  loadCategories = () =>{\n      LibraryService.fetchCategories()\n        .then((data) => {\n          this.setState({\n            categories: data.data\n          });\n        });\n  }\n  loadBooks = () => {\n      LibraryService.fetchBooks()\n        .then((data) => {\n          this.setState({\n            books: data.data\n          });\n        });\n  }\n  loadAuthors = () => {\n      LibraryService.fetchAuthors()\n        .then((data) => {\n          this.setState({\n            authors: data.data\n          });\n        });\n  }\n  loadCountries = () => {\n      LibraryService.fetchCountries()\n        .then((data) => {\n          this.setState({\n            countries: data.data\n          });\n        });\n  }\n    addBook = (name, category, authorId, availableCopies) => {\n        const newbook = {name: name, category: category, authorId: authorId, availableCopies: availableCopies};\n        LibraryService.addBook(newbook)\n            .then(() => {\n                this.loadBooks();\n            });\n    }\n  deleteBook = (id) => {\n      LibraryService.deleteBook(id)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n  editBook = (id, name, category, authorId, availableCopies) => {\n      LibraryService.editBook(id, name, category, authorId, availableCopies)\n        .then(() => this.loadBooks());\n  }\n  getBook = (id) => {\n      LibraryService.getBook(id)\n        .then((data) => this.setState({BookToEdit: data.data}))\n  }\n  markAsTaken = (id) => {\n      LibraryService.markAsTaken(id)\n        .then(() => {\n          this.loadBooks()\n        });\n  }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}