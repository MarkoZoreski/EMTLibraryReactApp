{"ast":null,"code":"var _jsxFileName = \"D:\\\\EMTLibrary\\\\libraryreactapp\\\\src\\\\components\\\\Book\\\\BookEdit\\\\bookEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookEdit = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, updateFormData] = React.useState({\n    name: \"\",\n    category: props.categories[0],\n    authorid: props.authors[0].id,\n    availableCopies: 0\n  });\n  useEffect(() => {\n    bookServices.getBook(id).then(data => {\n      const obj = {\n        name: data.data.name,\n        category: data.data.category,\n        author: data.data.author.id,\n        availableCopies: data.data.availableCopies\n      };\n      updateFormData(obj);\n    });\n  }, []);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const name = formData.name !== \"\" ? formData.name : props.book.name;\n    const category = formData.category !== 0 ? formData.category : props.book.category.id;\n    const authorid = formData.authorid !== 0 ? formData.authorid : props.book.authorid;\n    const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\n    props.onEditBook(props.book.id, name, category, authorid, availableCopies);\n    navigate(\"/books\");\n  };\n\n  console.log(formData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-5\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Book name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"name\",\n            name: \"name\",\n            placeholder: props.book.name,\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"category\",\n            name: \"category\",\n            placeholder: props.book.category,\n            value: formData.category,\n            onChange: handleChange,\n            children: props.categories.map((term, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: term,\n              children: term\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"authorid\",\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"authorid\",\n            name: \"authorid\",\n            placeholder: props.book.authorid,\n            value: formData.authorid,\n            onChange: handleChange,\n            children: props.authors.map((term, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: term.id,\n              children: term.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"availableCopies\",\n            children: \"Available copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"availableCopies\",\n            name: \"availableCopies\",\n            placeholder: props.book.availableCopies,\n            value: formData.availableCopies,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookEdit, \"UMKT/Iw2V6Na3LZMTns1iseduR0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BookEdit;\nexport default BookEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookEdit\");","map":{"version":3,"sources":["D:/EMTLibrary/libraryreactapp/src/components/Book/BookEdit/bookEdit.js"],"names":["React","useEffect","useNavigate","BookEdit","props","navigate","formData","updateFormData","useState","name","category","categories","authorid","authors","id","availableCopies","bookServices","getBook","then","data","obj","author","handleChange","e","target","value","trim","onFormSubmit","preventDefault","book","onEditBook","console","log","map","term","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,QAAD,EAAWC,cAAX,IAA6BP,KAAK,CAACQ,QAAN,CAAe;AAC9CC,IAAAA,IAAI,EAAE,EADwC;AAE9CC,IAAAA,QAAQ,EAAEN,KAAK,CAACO,UAAN,CAAiB,CAAjB,CAFoC;AAG9CC,IAAAA,QAAQ,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiBC,EAHmB;AAI9CC,IAAAA,eAAe,EAAE;AAJ6B,GAAf,CAAnC;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,YAAY,CAACC,OAAb,CAAqBH,EAArB,EACKI,IADL,CACWC,IAAD,IAAU;AACZ,YAAMC,GAAG,GAAG;AACRX,QAAAA,IAAI,EAAEU,IAAI,CAACA,IAAL,CAAUV,IADR;AAERC,QAAAA,QAAQ,EAAES,IAAI,CAACA,IAAL,CAAUT,QAFZ;AAGRW,QAAAA,MAAM,EAAEF,IAAI,CAACA,IAAL,CAAUE,MAAV,CAAiBP,EAHjB;AAIRC,QAAAA,eAAe,EAAEI,IAAI,CAACA,IAAL,CAAUJ;AAJnB,OAAZ;AAMAR,MAAAA,cAAc,CAACa,GAAD,CAAd;AACH,KATL;AAUH,GAXQ,EAWP,EAXO,CAAT;;AAYA,QAAME,YAAY,GAAIC,CAAD,IAAO;AACxBhB,IAAAA,cAAc,CAAC,EACX,GAAGD,QADQ;AAEX,OAACiB,CAAC,CAACC,MAAF,CAASf,IAAV,GAAiBc,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf;AAFN,KAAD,CAAd;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACA,UAAMnB,IAAI,GAAGH,QAAQ,CAACG,IAAT,KAAkB,EAAlB,GAAuBH,QAAQ,CAACG,IAAhC,GAAuCL,KAAK,CAACyB,IAAN,CAAWpB,IAA/D;AACA,UAAMC,QAAQ,GAAGJ,QAAQ,CAACI,QAAT,KAAsB,CAAtB,GAA0BJ,QAAQ,CAACI,QAAnC,GAA8CN,KAAK,CAACyB,IAAN,CAAWnB,QAAX,CAAoBI,EAAnF;AACA,UAAMF,QAAQ,GAAGN,QAAQ,CAACM,QAAT,KAAsB,CAAtB,GAA0BN,QAAQ,CAACM,QAAnC,GAA8CR,KAAK,CAACyB,IAAN,CAAWjB,QAA1E;AACA,UAAMG,eAAe,GAAGT,QAAQ,CAACS,eAAT,KAA6B,CAA7B,GAAiCT,QAAQ,CAACS,eAA1C,GAA4DX,KAAK,CAACyB,IAAN,CAAWd,eAA/F;AAEAX,IAAAA,KAAK,CAAC0B,UAAN,CAAiB1B,KAAK,CAACyB,IAAN,CAAWf,EAA5B,EAAgCL,IAAhC,EAAsCC,QAAtC,EAAgDE,QAAhD,EAA0DG,eAA1D;AACAV,IAAAA,QAAQ,CAAC,QAAD,CAAR;AACH,GATD;;AAWA0B,EAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEqB,YAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACO,YAAA,SAAS,EAAC,cADjB;AAEO,YAAA,EAAE,EAAC,MAFV;AAGO,YAAA,IAAI,EAAC,MAHZ;AAIO,YAAA,WAAW,EAAEvB,KAAK,CAACyB,IAAN,CAAWpB,IAJ/B;AAKO,YAAA,KAAK,EAAEH,QAAQ,CAACG,IALvB;AAMO,YAAA,QAAQ,EAAEa;AANjB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,IAAI,EAAC,MAAb;AACQ,YAAA,SAAS,EAAC,cADlB;AAEQ,YAAA,EAAE,EAAC,UAFX;AAGQ,YAAA,IAAI,EAAC,UAHb;AAIQ,YAAA,WAAW,EAAElB,KAAK,CAACyB,IAAN,CAAWnB,QAJhC;AAKQ,YAAA,KAAK,EAAEJ,QAAQ,CAACI,QALxB;AAMQ,YAAA,QAAQ,EAAEY,YANlB;AAAA,sBAOKlB,KAAK,CAACO,UAAN,CAAiBsB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBAClB;AAAgB,cAAA,KAAK,EAAED,IAAvB;AAAA,wBAA8BA;AAA9B,eAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,oBADH;AAPL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,eA2BI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,IAAI,EAAC,MAAb;AACQ,YAAA,SAAS,EAAC,cADlB;AAEQ,YAAA,EAAE,EAAC,UAFX;AAGQ,YAAA,IAAI,EAAC,UAHb;AAIQ,YAAA,WAAW,EAAE/B,KAAK,CAACyB,IAAN,CAAWjB,QAJhC;AAKQ,YAAA,KAAK,EAAEN,QAAQ,CAACM,QALxB;AAMQ,YAAA,QAAQ,EAAEU,YANlB;AAAA,sBAOKlB,KAAK,CAACS,OAAN,CAAcoB,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,kBACf;AAAgB,cAAA,KAAK,EAAED,IAAI,CAACpB,EAA5B;AAAA,wBAAiCoB,IAAI,CAACzB;AAAtC,eAAa0B,CAAb;AAAA;AAAA;AAAA;AAAA,oBADH;AAPL;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BJ,eA0CI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AACO,YAAA,SAAS,EAAC,cADjB;AAEO,YAAA,EAAE,EAAC,iBAFV;AAGO,YAAA,IAAI,EAAC,iBAHZ;AAIO,YAAA,WAAW,EAAE/B,KAAK,CAACyB,IAAN,CAAWd,eAJ/B;AAKO,YAAA,KAAK,EAAET,QAAQ,CAACS,eALvB;AAMO,YAAA,QAAQ,EAAEO;AANjB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CJ,eAsDI;AAAQ,UAAA,EAAE,EAAC,QAAX;AAAoB,UAAA,IAAI,EAAC,QAAzB;AAAkC,UAAA,SAAS,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8DH,CAxGD;;GAAMnB,Q;UAEeD,W;;;KAFfC,Q;AAyGN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst BookEdit = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n    const [formData, updateFormData] = React.useState({\r\n        name: \"\",\r\n        category: props.categories[0],\r\n        authorid: props.authors[0].id,\r\n        availableCopies: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        bookServices.getBook(id)\r\n            .then((data) => {\r\n                const obj = {\r\n                    name: data.data.name,\r\n                    category: data.data.category,\r\n                    author: data.data.author.id,\r\n                    availableCopies: data.data.availableCopies\r\n                }\r\n                updateFormData(obj)\r\n            })\r\n    },[])\r\n    const handleChange = (e) => {\r\n        updateFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value.trim()\r\n        })\r\n    }\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const name = formData.name !== \"\" ? formData.name : props.book.name;\r\n        const category = formData.category !== 0 ? formData.category : props.book.category.id;\r\n        const authorid = formData.authorid !== 0 ? formData.authorid : props.book.authorid;\r\n        const availableCopies = formData.availableCopies !== 0 ? formData.availableCopies : props.book.availableCopies;\r\n\r\n        props.onEditBook(props.book.id, name, category, authorid, availableCopies);\r\n        navigate(\"/books\");\r\n    }\r\n\r\n    console.log(formData);\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-md-5\">\r\n                <form onSubmit={onFormSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Book name</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"name\"\r\n                               name=\"name\"\r\n                               placeholder={props.book.name}\r\n                               value={formData.name}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"category\"\r\n                                name=\"category\"\r\n                                placeholder={props.book.category}\r\n                                value={formData.category}\r\n                                onChange={handleChange}>\r\n                            {props.categories.map((term, i) =>\r\n                                <option key={i} value={term}>{term}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"authorid\">Author</label>\r\n                        <select type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"authorid\"\r\n                                name=\"authorid\"\r\n                                placeholder={props.book.authorid}\r\n                                value={formData.authorid}\r\n                                onChange={handleChange}>\r\n                            {props.authors.map((term, i) =>\r\n                                <option key={i} value={term.id}>{term.name}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"availableCopies\">Available copies</label>\r\n                        <input type=\"text\"\r\n                               className=\"form-control\"\r\n                               id=\"availableCopies\"\r\n                               name=\"availableCopies\"\r\n                               placeholder={props.book.availableCopies}\r\n                               value={formData.availableCopies}\r\n                               onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default BookEdit;\r\n"]},"metadata":{},"sourceType":"module"}