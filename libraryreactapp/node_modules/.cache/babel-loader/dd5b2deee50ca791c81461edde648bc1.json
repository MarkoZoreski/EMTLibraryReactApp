{"ast":null,"code":"var _jsxFileName = \"D:\\\\EMTLibrary\\\\libraryreactapp\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      this.loadCountries();\n      this.loadAuthors();\n      this.loadCategories();\n      this.loadBooks(); // this.loadBooksPaginated();\n    };\n\n    this.loadBooksPaginated = () => {\n      LibraryService.fetchPaginatedBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      LibraryService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      LibraryService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      LibraryService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      LibraryService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      LibraryService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, authorId, availableCopies) => {\n      const newbook = {\n        name: name,\n        category: category,\n        authorId: authorId,\n        availableCopies: availableCopies\n      };\n      LibraryService.addBook(newbook).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.editBook = (id, name, category, authorId, availableCopies) => {\n      LibraryService.editBook(id, name, category, authorId, availableCopies).then(() => this.loadBooks());\n    };\n\n    this.getBook = id => {\n      LibraryService.getBook(id).then(data => this.setState({\n        selectedBook: data.data\n      }));\n    };\n\n    this.markAsTaken = id => {\n      LibraryService.markAsTaken(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      selectedBook: {},\n      countries: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(Redirect, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(Books, {\n              books: this.state.books,\n              onDelete: this.deleteBook,\n              onEdit: this.getBook,\n              onMarkAsTaken: this.markAsTaken\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/add\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookAdd, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onAddBook: this.addBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/books/edit/:id\",\n            exact: true,\n            render: () => /*#__PURE__*/_jsxDEV(BookEdit, {\n              categories: this.state.categories,\n              authors: this.state.authors,\n              onEditBook: this.editBook,\n              book: this.state.selectedBook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) // <div>\n    //     <Books books={this.state.books}/>\n    // </div>\n    ;\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/EMTLibrary/libraryreactapp/src/components/App/App.js"],"names":["React","Component","BrowserRouter","Router","Routes","Route","LibraryService","Books","BookAdd","BookEdit","App","constructor","props","fetchData","loadCountries","loadAuthors","loadCategories","loadBooks","loadBooksPaginated","fetchPaginatedBooks","then","data","setState","books","fetchCategories","categories","fetchBooks","fetchAuthors","authors","fetchCountries","countries","deleteBook","id","addBook","name","category","authorId","availableCopies","newbook","editBook","getBook","selectedBook","markAsTaken","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport {Component} from \"react\";\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      selectedBook: {},\n      countries: []\n    }\n  }\n\n  render() {\n    return (\n        <Router>\n            <main>\n          <Redirect>\n            <Route path={\"/books\"} exact render={() =>\n              <Books books={this.state.books}\n                     onDelete={this.deleteBook}\n                     onEdit={this.getBook}\n                     onMarkAsTaken={this.markAsTaken}/>\n            }/>\n\n\n            <Route path={\"/books/add\"} exact render={() =>\n              <BookAdd categories={this.state.categories}\n                       authors={this.state.authors}\n                       onAddBook={this.addBook}/>}/>\n\n            <Route path={\"/books/edit/:id\"} exact render={() =>\n              <BookEdit categories={this.state.categories}\n                        authors={this.state.authors}\n                        onEditBook={this.editBook}\n                        book={this.state.selectedBook}/>}/>\n\n          </Redirect>\n          {/*<Navigate to={\"/books\"}/>*/}\n\n        </main>\n        </Router>\n        // <div>\n        //     <Books books={this.state.books}/>\n        // </div>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n    fetchData = () => {\n        this.loadCountries();\n        this.loadAuthors();\n        this.loadCategories();\n        this.loadBooks();\n        // this.loadBooksPaginated();\n    }\n\n  loadBooksPaginated = () => {\n      LibraryService.fetchPaginatedBooks()\n        .then((data) => {\n          this.setState({\n            books: data.data\n          });\n        });\n  }\n  loadCategories = () =>{\n      LibraryService.fetchCategories()\n        .then((data) => {\n          this.setState({\n            categories: data.data\n          });\n        });\n  }\n  loadBooks = () => {\n      LibraryService.fetchBooks()\n        .then((data) => {\n          this.setState({\n            books: data.data\n          });\n        });\n  }\n  loadAuthors = () => {\n      LibraryService.fetchAuthors()\n        .then((data) => {\n          this.setState({\n            authors: data.data\n          });\n        });\n  }\n  loadCountries = () => {\n      LibraryService.fetchCountries()\n        .then((data) => {\n          this.setState({\n            countries: data.data\n          });\n        });\n  }\n  deleteBook = (id) => {\n      LibraryService.deleteBook(id)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n  addBook = (name, category, authorId, availableCopies) => {\n    const newbook = {name: name, category: category, authorId: authorId, availableCopies: availableCopies};\n      LibraryService.addBook(newbook)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n  editBook = (id, name, category, authorId, availableCopies) => {\n      LibraryService.editBook(id, name, category, authorId, availableCopies)\n        .then(() => this.loadBooks());\n  }\n  getBook = (id) => {\n      LibraryService.getBook(id)\n        .then((data) => this.setState({selectedBook: data.data}))\n  }\n  markAsTaken = (id) => {\n      LibraryService.markAsTaken(id)\n        .then(() => {\n          this.loadBooks()\n        });\n  }\n\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}