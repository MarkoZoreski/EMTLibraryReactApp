{"ast":null,"code":"var _jsxFileName = \"D:\\\\EMTLibrary\\\\libraryreactapp\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { Navigate } from 'react-router-dom';\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooksPaginated = () => {\n      BookService.fetchPaginatedBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      BookService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadBooks = () => {\n      BookService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      BookService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.loadCountries = () => {\n      BookService.fetchCountries().then(data => {\n        this.setState({\n          countries: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      BookService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, authorId, availableCopies) => {\n      const book1 = {\n        name: name,\n        category: category,\n        authorId: authorId,\n        availableCopies: availableCopies\n      };\n      BookService.addBook(book1).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.editBook = (id, name, category, authorId, availableCopies) => {\n      BookService.editBook(id, name, category, authorId, availableCopies).then(() => this.loadBooks());\n    };\n\n    this.getBook = id => {\n      BookService.getBook(id).then(data => this.setState({\n        selectedBook: data.data\n      }));\n    };\n\n    this.markTaken = id => {\n      BookService.markTaken(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      selectedBook: {},\n      countries: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/books\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(Books, {\n            books: this.state.books,\n            onDelete: this.deleteBook,\n            onEdit: this.getBook,\n            onMarkTaken: this.markTaken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/books/add\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(BookAdd, {\n            categories: this.state.categories,\n            authors: this.state.authors,\n            onAddBook: this.addBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/books/edit/:id\",\n          exact: true,\n          element: /*#__PURE__*/_jsxDEV(BookEdit, {\n            categories: this.state.categories,\n            authors: this.state.authors,\n            onEditBook: this.editBook,\n            book: this.state.selectedBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) // <div>\n    //     <Books books={this.state.books}/>\n    // </div>\n    ;\n  }\n\n  componentDidMount() {\n    this.loadCountries();\n    this.loadAuthors();\n    this.loadCategories();\n    this.loadBooks(); // this.loadBooksPaginated();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/EMTLibrary/libraryreactapp/src/components/App/App.js"],"names":["React","Component","BrowserRouter","Router","Redirect","Route","Navigate","LibraryService","Books","BookAdd","BookEdit","App","constructor","props","loadBooksPaginated","BookService","fetchPaginatedBooks","then","data","setState","books","loadCategories","fetchCategories","categories","loadBooks","fetchBooks","loadAuthors","fetchAuthors","authors","loadCountries","fetchCountries","countries","deleteBook","id","addBook","name","category","authorId","availableCopies","book1","editBook","getBook","selectedBook","markTaken","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport {Component} from \"react\";\nimport {BrowserRouter as Router, Redirect, Route} from \"react-router-dom\";\nimport {Navigate} from 'react-router-dom';\nimport LibraryService from \"../../repository/libraryRepository\";\nimport Books from \"../Book/BookList/books\";\nimport BookAdd from \"../Book/BookAdd/bookAdd\";\nimport BookEdit from \"../Book/BookEdit/bookEdit\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      selectedBook: {},\n      countries: []\n    }\n  }\n\n  render() {\n    return (\n        <Router>\n\n          <Routes>\n            <Route path={\"/books\"} exact element={\n              <Books books={this.state.books}\n                     onDelete={this.deleteBook}\n                     onEdit={this.getBook}\n                     onMarkTaken={this.markTaken}/>\n            }/>\n\n\n            <Route path={\"/books/add\"} exact element={\n              <BookAdd categories={this.state.categories}\n                       authors={this.state.authors}\n                       onAddBook={this.addBook}/>}/>\n\n            <Route path={\"/books/edit/:id\"} exact element={\n              <BookEdit categories={this.state.categories}\n                        authors={this.state.authors}\n                        onEditBook={this.editBook}\n                        book={this.state.selectedBook}/>}/>\n\n\n          </Routes>\n          {/*<Navigate to={\"/books\"}/>*/}\n\n\n        </Router>\n        // <div>\n        //     <Books books={this.state.books}/>\n        // </div>\n    );\n  }\n\n  componentDidMount() {\n    this.loadCountries();\n    this.loadAuthors();\n    this.loadCategories();\n    this.loadBooks();\n    // this.loadBooksPaginated();\n  }\n  loadBooksPaginated = () => {\n    BookService.fetchPaginatedBooks()\n        .then((data) => {\n          this.setState({\n            books: data.data\n          });\n        });\n  }\n  loadCategories = () =>{\n    BookService.fetchCategories()\n        .then((data) => {\n          this.setState({\n            categories: data.data\n          });\n        });\n  }\n  loadBooks = () => {\n    BookService.fetchBooks()\n        .then((data) => {\n          this.setState({\n            books: data.data\n          });\n        });\n  }\n  loadAuthors = () => {\n    BookService.fetchAuthors()\n        .then((data) => {\n          this.setState({\n            authors: data.data\n          });\n        });\n  }\n  loadCountries = () => {\n    BookService.fetchCountries()\n        .then((data) => {\n          this.setState({\n            countries: data.data\n          });\n        });\n  }\n\n\n  deleteBook = (id) => {\n    BookService.deleteBook(id)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n  addBook = (name, category, authorId, availableCopies) => {\n    const book1 = {name: name, category: category, authorId: authorId, availableCopies: availableCopies};\n    BookService.addBook(book1)\n        .then(() => {\n          this.loadBooks();\n        });\n  }\n  editBook = (id, name, category, authorId, availableCopies) => {\n    BookService.editBook(id, name, category, authorId, availableCopies)\n        .then(() => this.loadBooks());\n  }\n  getBook = (id) => {\n    BookService.getBook(id)\n        .then((data) => this.setState({selectedBook: data.data}))\n  }\n  markTaken = (id) => {\n    BookService.markTaken(id)\n        .then(() => {\n          this.loadBooks()\n        });\n  }\n\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}